name: publish

on:
  workflow_dispatch:

jobs:
  publish:
    name: Publish to npm
    environment: Publish
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: corepack enable
      - uses: actions/setup-node@v4
        with:
            node-version: 20
            cache: yarn

      - name: Cache dependencies
        id: yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            .yarn/install-state.gz
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}-${{ hashFiles('**/package.json', '!node_modules/**') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --immutable

      - name: Config and Build
        run: |
          npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
          yarn install --immutable
          yarn build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.YARN_NPM_AUTH_TOKEN }}

      - name: Publish (All)
        if: github.event.inputs.workspace == ''
        run: yarn release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          YARN_NPM_AUTH_TOKEN: ${{ secrets.YARN_NPM_AUTH_TOKEN }}

      - name: Slack notification - Published
        if: steps.release_check.outputs.new_release == 'true' && success()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: 'C03KN9Q2S7P'
          payload: |
            {
              "text": "*JavaScript SDK*: :rocket: Published version *${{ github.event.inputs.version }}* to *production* :tada:!"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Slack notification - Publishing failed
        uses: slackapi/slack-github-action@v1.23.0
        if: steps.release_check.outputs.new_release == 'true' && failure()
        with:
          channel-id: 'C03KN9Q2S7P'
          payload: |
            {
              "text": "<!here> *JavaScript SDK*: :x: Publishing of version *${{ github.event.inputs.version }}* to *production* failed :cry:!"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}